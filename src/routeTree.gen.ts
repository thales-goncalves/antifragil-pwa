/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideosVideoIdImport } from './routes/videos/$videoId'
import { Route as ProgramsProgramIdImport } from './routes/programs/$programId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SignUpIndexLazyImport = createFileRoute('/sign-up/')()
const SignInIndexLazyImport = createFileRoute('/sign-in/')()
const ProgramsIndexLazyImport = createFileRoute('/programs/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const CollectionsIndexLazyImport = createFileRoute('/collections/')()
const AboutIndexLazyImport = createFileRoute('/about/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignUpIndexLazyRoute = SignUpIndexLazyImport.update({
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up/index.lazy').then((d) => d.Route))

const SignInIndexLazyRoute = SignInIndexLazyImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in/index.lazy').then((d) => d.Route))

const ProgramsIndexLazyRoute = ProgramsIndexLazyImport.update({
  path: '/programs/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/programs/index.lazy').then((d) => d.Route),
)

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const CollectionsIndexLazyRoute = CollectionsIndexLazyImport.update({
  path: '/collections/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/collections/index.lazy').then((d) => d.Route),
)

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about/index.lazy').then((d) => d.Route))

const VideosVideoIdRoute = VideosVideoIdImport.update({
  path: '/videos/$videoId',
  getParentRoute: () => rootRoute,
} as any)

const ProgramsProgramIdRoute = ProgramsProgramIdImport.update({
  path: '/programs/$programId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/programs/$programId': {
      id: '/programs/$programId'
      path: '/programs/$programId'
      fullPath: '/programs/$programId'
      preLoaderRoute: typeof ProgramsProgramIdImport
      parentRoute: typeof rootRoute
    }
    '/videos/$videoId': {
      id: '/videos/$videoId'
      path: '/videos/$videoId'
      fullPath: '/videos/$videoId'
      preLoaderRoute: typeof VideosVideoIdImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/collections/': {
      id: '/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/programs/': {
      id: '/programs/'
      path: '/programs'
      fullPath: '/programs'
      preLoaderRoute: typeof ProgramsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ProgramsProgramIdRoute,
  VideosVideoIdRoute,
  AboutIndexLazyRoute,
  CollectionsIndexLazyRoute,
  DashboardIndexLazyRoute,
  ProfileIndexLazyRoute,
  ProgramsIndexLazyRoute,
  SignInIndexLazyRoute,
  SignUpIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/programs/$programId",
        "/videos/$videoId",
        "/about/",
        "/collections/",
        "/dashboard/",
        "/profile/",
        "/programs/",
        "/sign-in/",
        "/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/programs/$programId": {
      "filePath": "programs/$programId.tsx"
    },
    "/videos/$videoId": {
      "filePath": "videos/$videoId.tsx"
    },
    "/about/": {
      "filePath": "about/index.lazy.tsx"
    },
    "/collections/": {
      "filePath": "collections/index.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.lazy.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.lazy.tsx"
    },
    "/programs/": {
      "filePath": "programs/index.lazy.tsx"
    },
    "/sign-in/": {
      "filePath": "sign-in/index.lazy.tsx"
    },
    "/sign-up/": {
      "filePath": "sign-up/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
